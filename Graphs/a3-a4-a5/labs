a3: Write a program that, given a graph with costs that has no negative cost cycles and two vertices, 
finds a lowest cost walk between the given vertices. The program shall use the Floyd-Warshall algorithm.

a4: Write a program that, given a graph with costs and two vertices, finds a lowest cost walk between the given vertices, or prints a message if there are negative cost cycles accessible from the starting vertex. 
The program will use a matrix defined as d[x,k]=the cost of the lowest cost walk from s to x and of length equal to k, where s is the starting vertex.

a5:Given an undirected graph with costs, find a Hamiltonian cycle of low cost (approximate TSP) by using the heuristic of sorting the edges in increasing order of their costs and, 
for each edge, choose it if and only if it does not close a cycle of length lower than n.
